{"version":3,"file":"static/js/367.4ee2f89a.chunk.js","mappings":"iOAoJA,MA1IA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAqCA,OACE,SAAC,KAAD,CAAWC,UAAU,QAArB,UACE,iBAAKA,UAAU,iBAAf,WACE,SAAC,KAAD,CAAKA,UAAU,mCAAf,UACE,SAAC,KAAD,sBAGDF,IACC,SAAC,KAAD,CAAKE,UAAU,kBAAf,UACE,SAAC,KAAD,WACE,iBAAMA,UAAU,6BAAhB,+CAON,SAAC,KAAD,CACEC,cArDc,CACpBC,SAAU,GACVC,SAAU,IAoDJC,SAjCS,SAACC,GAChB,IAAMC,EAAS,CAAC,EAUhB,OARKD,EAAOH,WACVI,EAAOJ,SAAW,8BAGfG,EAAOF,WACVG,EAAOH,SAAW,8BAGbG,CACR,EAsBOC,SAlDS,SAACF,EAAD,GAAgC,IAArBG,EAAoB,EAApBA,cAC1BT,GAAW,GAEXU,YAAW,WAGT,GAFAD,GAAc,GAEU,QAApBH,EAAOF,SAAoB,CAC7B,IAAMO,EAAO,CAAEC,MAAOC,EAAAA,EAAAA,WAAsBV,SAAUG,EAAOH,UAC7DP,EC7Be,SAACe,GACtB,MAAO,CACLG,KAAM,WACNC,QAASJ,EAEZ,CDwBgBK,CAAQL,IACjBjB,EAAS,IACV,MACCM,GAAW,EAEd,GAAE,IACJ,EAiCK,SAKG,SAACiB,GACA,IACEX,EAOEW,EAPFX,OACAC,EAMEU,EANFV,OACAW,EAKED,EALFC,QACAC,EAIEF,EAJFE,aACAC,EAGEH,EAHFG,WACAC,EAEEJ,EAFFI,aACAC,EACEL,EADFK,aAGF,OACE,UAAC,KAAD,CAAMd,SAAUa,EAAhB,WACE,gBAAKpB,UAAU,OAAf,SACGqB,IAAgB,SAAC,KAAD,CAASC,MAAM,OAAf,2BAGnB,SAAC,KAAD,CAAKtB,UAAU,iCAAf,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEa,KAAK,OACLU,KAAK,WACLC,YAAY,WACZC,aAAa,MACbC,SAAUR,EACVS,OAAQR,EACRS,MAAOvB,EAAOH,SACd2B,QAASvB,GAAUA,EAAOJ,UAAYe,EAAQf,YAEhD,SAAC,KAAD,CAAcF,UAAU,yCAAxB,SACGM,GAAUA,EAAOJ,iBAIxB,SAAC,KAAD,CAAKF,UAAU,sCAAf,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEa,KAAK,WACLU,KAAK,WACLC,YAAY,WACZE,SAAUR,EACVS,OAAQR,EACRS,MAAOvB,EAAOF,SACd0B,QAASvB,GAAUA,EAAOH,UAAYc,EAAQd,YAEhD,SAAC,KAAD,CAAcH,UAAU,yCAAxB,SACGM,GAAUA,EAAOH,iBAIxB,SAAC,KAAD,CAAKH,UAAU,6BAAf,UACE,SAAC,KAAD,WACE,mBAAQa,KAAK,SAAb,0BAKT,KAGH,SAAC,KAAD,CAAKb,UAAU,uCAAf,UACE,SAAC,KAAD,WACE,cAAG8B,KAAK,mBAAR,wCAGJ,SAAC,KAAD,CAAK9B,UAAU,2BAAf,UACE,SAAC,KAAD,WACE,cAAG8B,KAAK,YAAR,yCAMX,EE9HD,MAfA,YAA+B,IAAd9B,EAAa,EAAbA,UACT+B,GAAWC,EAAAA,EAAAA,MACXrC,GAAWC,EAAAA,EAAAA,MAMjB,MAJ0B,YAAtBmC,EAASE,UACXtC,EDFK,CACLkB,KAAM,aCKN,gBAAKb,UAAWA,EAAhB,UACE,SAAC,EAAD,KAGL,C","sources":["components/LoginUI/index.js","state/auth/authActions.js","pages/Login/index.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Col, Container, FormFeedback, Input, Row, Spinner } from 'reactstrap';\nimport { Form, Formik } from 'formik';\n\nimport { setAuth } from '../../state/auth/authActions';\nimport './LoginUI.scss';\nimport constants from '../../constants/index';\n\nfunction LoginUI() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [isError, setIsError] = useState(false);\n\n  const initialValues = {\n    username: '',\n    password: '',\n  };\n\n  const onSubmit = (values, { setSubmitting }) => {\n    setIsError(false);\n\n    setTimeout(() => {\n      setSubmitting(false);\n\n      if (values.password === '123') {\n        const auth = { token: constants.FAKE_TOKEN, username: values.username };\n        dispatch(setAuth(auth));\n        navigate('/');\n      } else {\n        setIsError(true);\n      }\n    }, 1000);\n  };\n\n  const validate = (values) => {\n    const errors = {};\n\n    if (!values.username) {\n      errors.username = 'Input username is required';\n    }\n\n    if (!values.password) {\n      errors.password = 'Input password is required';\n    }\n\n    return errors;\n  };\n\n  return (\n    <Container className=\"login\">\n      <div className=\"login__wrapper\">\n        <Row className=\"login__wrapper__title text-start\">\n          <Col>Login</Col>\n        </Row>\n\n        {isError && (\n          <Row className=\"text-start mb-3\">\n            <Col>\n              <span className=\"login__wrapper__text-error\">\n                Incorrect email or password.\n              </span>\n            </Col>\n          </Row>\n        )}\n\n        <Formik\n          initialValues={initialValues}\n          validate={validate}\n          onSubmit={onSubmit}\n        >\n          {(formikProps) => {\n            const {\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting,\n            } = formikProps;\n\n            return (\n              <Form onSubmit={handleSubmit}>\n                <div className=\"mb-3\">\n                  {isSubmitting && <Spinner color=\"dark\">Loading...</Spinner>}\n                </div>\n\n                <Row className=\"login__wrapper__input_username\">\n                  <Col>\n                    <Input\n                      type=\"text\"\n                      name=\"username\"\n                      placeholder=\"USERNAME\"\n                      autoComplete=\"off\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.username}\n                      invalid={errors && errors.username && touched.username}\n                    />\n                    <FormFeedback className=\"login__wrapper__feedback mb-4 text-end\">\n                      {errors && errors.username}\n                    </FormFeedback>\n                  </Col>\n                </Row>\n                <Row className=\"login__wrapper__input_password mb-2\">\n                  <Col>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"PASSWORD\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.password}\n                      invalid={errors && errors.password && touched.password}\n                    />\n                    <FormFeedback className=\"login__wrapper__feedback mb-4 text-end\">\n                      {errors && errors.password}\n                    </FormFeedback>\n                  </Col>\n                </Row>\n                <Row className=\"login__wrapper__btn_submit\">\n                  <Col>\n                    <button type=\"submit\">SUBMIT</button>\n                  </Col>\n                </Row>\n              </Form>\n            );\n          }}\n        </Formik>\n\n        <Row className=\"login__wrapper__forgot_pw text-start\">\n          <Col>\n            <a href=\"/forgot-password\">Forgot your password?</a>\n          </Col>\n        </Row>\n        <Row className=\"login__wrapper__register\">\n          <Col>\n            <a href=\"/register\">Register an account</a>\n          </Col>\n        </Row>\n      </div>\n    </Container>\n  );\n}\n\nexport default LoginUI;\n","export const setAuth = (auth) => {\n  return {\n    type: 'SET_AUTH',\n    payload: auth,\n  };\n};\n\nexport const logOut = () => {\n  return {\n    type: 'LOG_OUT',\n  };\n};\n","import { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport LoginUI from '../../components/LoginUI';\nimport { logOut } from '../../state/auth/authActions';\n\nfunction Login({ className }) {\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  if (location.pathname === '/logout') {\n    dispatch(logOut());\n  }\n\n  return (\n    <div className={className}>\n      <LoginUI />\n    </div>\n  );\n}\n\nexport default Login;\n"],"names":["navigate","useNavigate","dispatch","useDispatch","useState","isError","setIsError","className","initialValues","username","password","validate","values","errors","onSubmit","setSubmitting","setTimeout","auth","token","constants","type","payload","setAuth","formikProps","touched","handleChange","handleBlur","handleSubmit","isSubmitting","color","name","placeholder","autoComplete","onChange","onBlur","value","invalid","href","location","useLocation","pathname"],"sourceRoot":""}